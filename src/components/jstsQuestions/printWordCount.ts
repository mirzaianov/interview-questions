const printWordCount = (text: string): void => {
  const map = new Map<string, number>();
  let l = 0;
  let r = 0;

  while (r <= text.length) {
    if (text[r] === ' ' || r === text.length) {
      const word: string = text.slice(l, r);

      map.set(word, (map.get(word) || 0) + 1);
      l = r + 1;
    }

    r += 1;
  }

  for (const [word, count] of map) {
    const output: string = `${word} - ${count}`;

    console.log(output);
  }
};

export default printWordCount;

printWordCount('apple banana orange apple'); // apple - 2 | banana - 1 | orange - 1

/**

Создаем стрелочную функцию `printWordCount`, которая принимает строку `text` (тип string) в качестве аргумента. Функция явно ничего не возвращает (тип void).

1. Создаем пустую коллекцию `map` для хранения слов (тип string) и их количества (тип number).
2. Инициализируем левый `l` и правый `r` указатели (тип number) на первый индекс строки.
3. Запускаем цикл, который будет работать, пока правый указатель меньше или равен длине входной строки.
  3.1. Проверяем, является ли текущий символ под правым указателем пробелом или же достигнут конец строки. Если условие выполнено:
    а. Извлекаем подстроку `word` (тип string) из строки, начиная от левого указателя включительно и до правого указателя (не включая).
    б. Проверяем коллекцию. Если в ней уже есть указанная подстрока, то увеличиваем количество на 1, или добавляем подстроку в коллекцию со значением равным 1.
    в. Перемещаем левый указатель на следующий индекс после пробела.
  3.2. Увеличиваем правый указатель на 1.
4. Проходимся циклом по всем парам ключ->значение (слово, количество) в коллекции. Для каждой пары формируем строку `output` (тип string) в формате `слово` - `количество`. Выводим строку в консоль.

 */
